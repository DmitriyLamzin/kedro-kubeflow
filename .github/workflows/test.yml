name: Unit and E2E Tests workflow (Spaceflights Quickstart)

on: # workflow_dispatch
  push:
    branches:
      - develop
    paths: 
      - "**.py"
      - "!docs/**"
  pull_request:
    paths: 
      - "**.py"
      - "!docs/**"

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup python
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.8

    - name: Setup virtualenv
      run: |
        python -V
        python -m pip install virtualenv
        virtualenv venv
        source venv/bin/activate
   
    - name: Check pre-commit status
      run: |
        pip install .[tests]
        pre-commit run --all-files

    - name: Test with tox
      run: |
        pip install tox-pip-version
        tox -v -e py38
    
    - name: Report coverage
      if: (github.event.pull_request.head.repo.full_name || github.push.repository.full_name) == github.repository
      uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE }}
      with:
        coverageCommand: coverage xml
        debug: true
        coverageLocations: coverage.xml:coverage.py
  e2e:
    if: (github.event.pull_request.head.repo.full_name || github.push.repository.full_name) == github.repository
    runs-on: ubuntu-latest
    needs: unit
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup python
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.8

    - name: Setup virtualenv
      run: |
        python -V
        python -m pip install virtualenv
        virtualenv venv
        source venv/bin/activate
   
    - name: Initialize kedro spaceflights project
      run: |
        pip install . 'kedro<0.18'
        kedro new --starter spaceflights --config tests/e2e/starter-config.yml --verbose

    - name: Install project dependencies
      working-directory: ./spaceflights
      run: |
        echo "kedro-kubeflow[gcp] @ git+https://github.com/getindata/kedro-kubeflow.git@$GITHUB_SHA" >> src/requirements.txt
        echo "kedro-docker" >> src/requirements.txt
        sed -i '/kedro-telemetry/d' src/requirements.txt
        cat src/requirements.txt
        pip install -r src/requirements.txt

    - name: Init and update configuration
      working-directory: ./spaceflights
      run: |
        kedro docker init
        kedro kubeflow init http://localhost:9000
        echo "!data/01_raw" >> .dockerignore
        mv ../tests/e2e/catalog.yml conf/base/catalog.yml
        rm -f conf/base/kubeflow.y*
        mv ../tests/e2e/kubeflow.yml conf/base/kubeflow.yml

    - name: Prepare docker env
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - name: Build pipeline docker image
      working-directory: ./spaceflights
      run: |
        docker build --build-arg BASE_IMAGE=python:3.8-buster --tag kedro-kubeflow-e2e:latest --load .

    - name: Publish docker image to GCR
      uses: mattes/gce-docker-push-action@v1
      with:
        creds: ${{ secrets.GOOGLE_CLOUD_TOKEN_JSON }}
        src: kedro-kubeflow-e2e:latest
        dst: gcr.io/gid-ml-ops-sandbox/kedro-kubeflow-e2e:${{ github.sha }}

    - name: Set up GCP Credentials
      uses: google-github-actions/auth@v0.6.0
      with:
        credentials_json: ${{ secrets.GOOGLE_CLOUD_TOKEN_JSON }}
        create_credentials_file: true
        cleanup_credentials: true

    - name: Run project on kubeflow pipelines
      working-directory: spaceflights
      run: |
        kedro kubeflow upload-pipeline
        kedro kubeflow run-once --wait-for-completion --timeout 1200
      env:
        KEDRO_CONFIG_KUBEFLOW_HOSTNAME: ${{ secrets.KUBEFLOW_HOSTNAME }}
        KEDRO_CONFIG_COMMIT_ID: ${{ github.sha }}
        KEDRO_CONFIG_RUN_ID: ${{ github.run_id }}
